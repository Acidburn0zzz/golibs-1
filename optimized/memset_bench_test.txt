go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03IntRangeClear8-4             1000000000               2.79 ns/op            0 B/op          0 allocs/op
Benchmark03IntMemsetClear8-4            100000000               11.1 ns/op             0 B/op          0 allocs/op
Benchmark03IntRangeFill8-4              1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03IntMemsetFill8-4             100000000               11.1 ns/op             0 B/op          0 allocs/op
Benchmark03IntRangeClear64-4            100000000               12.3 ns/op             0 B/op          0 allocs/op
Benchmark03IntMemsetClear64-4           50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03IntRangeFill64-4             50000000                35.0 ns/op             0 B/op          0 allocs/op
Benchmark03IntMemsetFill64-4            50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03IntRangeClear1K-4            10000000               145 ns/op               0 B/op          0 allocs/op
Benchmark03IntMemsetClear1K-4           20000000                85.5 ns/op             0 B/op          0 allocs/op
Benchmark03IntRangeFill1K-4              5000000               369 ns/op               0 B/op          0 allocs/op
Benchmark03IntMemsetFill1K-4            20000000                85.5 ns/op             0 B/op          0 allocs/op
Benchmark03IntRangeClear4K-4             3000000               574 ns/op               0 B/op          0 allocs/op
Benchmark03IntMemsetClear4K-4            5000000               305 ns/op               0 B/op          0 allocs/op
Benchmark03IntRangeFill4K-4              1000000              1439 ns/op               0 B/op          0 allocs/op
Benchmark03IntMemsetFill4K-4             5000000               300 ns/op               0 B/op          0 allocs/op
Benchmark03IntRangeClear64K-4             100000             19170 ns/op               0 B/op          0 allocs/op
Benchmark03IntMemsetClear64K-4            100000             14970 ns/op               0 B/op          0 allocs/op
Benchmark03IntRangeFill64K-4              100000             22773 ns/op               0 B/op          0 allocs/op
Benchmark03IntMemsetFill64K-4             100000             14996 ns/op               0 B/op          0 allocs/op
Benchmark03IntRangeClear1M-4                1000           1434198 ns/op               0 B/op          0 allocs/op
Benchmark03IntMemsetClear1M-4               3000            506700 ns/op               0 B/op          0 allocs/op
Benchmark03IntRangeFill1M-4                 1000           1530162 ns/op               0 B/op          0 allocs/op
Benchmark03IntMemsetFill1M-4                3000            507534 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        42.937s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03Int8RangeClear8-4            1000000000               2.79 ns/op            0 B/op          0 allocs/op
Benchmark03Int8MemsetClear8-4           100000000               12.0 ns/op             0 B/op          0 allocs/op
Benchmark03Int8RangeFill8-4             1000000000               2.60 ns/op            0 B/op          0 allocs/op
Benchmark03Int8MemsetFill8-4            100000000               12.0 ns/op             0 B/op          0 allocs/op
Benchmark03Int8RangeClear64-4           500000000                3.06 ns/op            0 B/op          0 allocs/op
Benchmark03Int8MemsetClear64-4          100000000               12.0 ns/op             0 B/op          0 allocs/op
Benchmark03Int8RangeFill64-4            50000000                29.8 ns/op             0 B/op          0 allocs/op
Benchmark03Int8MemsetFill64-4           100000000               12.0 ns/op             0 B/op          0 allocs/op
Benchmark03Int8RangeClear1K-4           100000000               21.2 ns/op             0 B/op          0 allocs/op
Benchmark03Int8MemsetClear1K-4          100000000               17.3 ns/op             0 B/op          0 allocs/op
Benchmark03Int8RangeFill1K-4             5000000               290 ns/op               0 B/op          0 allocs/op
Benchmark03Int8MemsetFill1K-4           100000000               17.3 ns/op             0 B/op          0 allocs/op
Benchmark03Int8RangeClear4K-4           20000000                74.7 ns/op             0 B/op          0 allocs/op
Benchmark03Int8MemsetClear4K-4          30000000                43.5 ns/op             0 B/op          0 allocs/op
Benchmark03Int8RangeFill4K-4             1000000              1146 ns/op               0 B/op          0 allocs/op
Benchmark03Int8MemsetFill4K-4           30000000                45.5 ns/op             0 B/op          0 allocs/op
Benchmark03Int8RangeClear64K-4           1000000              1787 ns/op               0 B/op          0 allocs/op
Benchmark03Int8MemsetClear64K-4          1000000              1802 ns/op               0 B/op          0 allocs/op
Benchmark03Int8RangeFill64K-4             100000             19969 ns/op               0 B/op          0 allocs/op
Benchmark03Int8MemsetFill64K-4           1000000              1802 ns/op               0 B/op          0 allocs/op
Benchmark03Int8RangeClear1M-4              50000             38893 ns/op               0 B/op          0 allocs/op
Benchmark03Int8MemsetClear1M-4             50000             30614 ns/op               0 B/op          0 allocs/op
Benchmark03Int8RangeFill1M-4                5000            324130 ns/op               0 B/op          0 allocs/op
Benchmark03Int8MemsetFill1M-4              50000             30647 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        42.336s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03Int16RangeClear8-4           1000000000               2.23 ns/op            0 B/op          0 allocs/op
Benchmark03Int16MemsetClear8-4          100000000               11.1 ns/op             0 B/op          0 allocs/op
Benchmark03Int16RangeFill8-4            1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03Int16MemsetFill8-4           100000000               11.1 ns/op             0 B/op          0 allocs/op
Benchmark03Int16RangeClear64-4          300000000                4.46 ns/op            0 B/op          0 allocs/op
Benchmark03Int16MemsetClear64-4         50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Int16RangeFill64-4           50000000                35.0 ns/op             0 B/op          0 allocs/op
Benchmark03Int16MemsetFill64-4          50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Int16RangeClear1K-4          50000000                39.0 ns/op             0 B/op          0 allocs/op
Benchmark03Int16MemsetClear1K-4         50000000                33.4 ns/op             0 B/op          0 allocs/op
Benchmark03Int16RangeFill1K-4            5000000               371 ns/op               0 B/op          0 allocs/op
Benchmark03Int16MemsetFill1K-4          50000000                33.4 ns/op             0 B/op          0 allocs/op
Benchmark03Int16RangeClear4K-4          10000000               145 ns/op               0 B/op          0 allocs/op
Benchmark03Int16MemsetClear4K-4         20000000                86.9 ns/op             0 B/op          0 allocs/op
Benchmark03Int16RangeFill4K-4            1000000              1439 ns/op               0 B/op          0 allocs/op
Benchmark03Int16MemsetFill4K-4          20000000                88.0 ns/op             0 B/op          0 allocs/op
Benchmark03Int16RangeClear64K-4           500000              3576 ns/op               0 B/op          0 allocs/op
Benchmark03Int16MemsetClear64K-4          500000              3627 ns/op               0 B/op          0 allocs/op
Benchmark03Int16RangeFill64K-4            100000             21683 ns/op               0 B/op          0 allocs/op
Benchmark03Int16MemsetFill64K-4           500000              3617 ns/op               0 B/op          0 allocs/op
Benchmark03Int16RangeClear1M-4             20000             93179 ns/op               0 B/op          0 allocs/op
Benchmark03Int16MemsetClear1M-4            20000             62368 ns/op               0 B/op          0 allocs/op
Benchmark03Int16RangeFill1M-4               5000            353179 ns/op               0 B/op          0 allocs/op
Benchmark03Int16MemsetFill1M-4             20000             65173 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        44.344s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03Int32RangeClear8-4           1000000000               2.80 ns/op            0 B/op          0 allocs/op
Benchmark03Int32MemsetClear8-4          100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Int32RangeFill8-4            1000000000               2.62 ns/op            0 B/op          0 allocs/op
Benchmark03Int32MemsetFill8-4           100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Int32RangeClear64-4          200000000                7.80 ns/op            0 B/op          0 allocs/op
Benchmark03Int32MemsetClear64-4         50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Int32RangeFill64-4           50000000                36.7 ns/op             0 B/op          0 allocs/op
Benchmark03Int32MemsetFill64-4          50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Int32RangeClear1K-4          20000000                74.7 ns/op             0 B/op          0 allocs/op
Benchmark03Int32MemsetClear1K-4         30000000                48.5 ns/op             0 B/op          0 allocs/op
Benchmark03Int32RangeFill1K-4            5000000               385 ns/op               0 B/op          0 allocs/op
Benchmark03Int32MemsetFill1K-4          30000000                48.5 ns/op             0 B/op          0 allocs/op
Benchmark03Int32RangeClear4K-4           5000000               288 ns/op               0 B/op          0 allocs/op
Benchmark03Int32MemsetClear4K-4         10000000               155 ns/op               0 B/op          0 allocs/op
Benchmark03Int32RangeFill4K-4            1000000              1539 ns/op               0 B/op          0 allocs/op
Benchmark03Int32MemsetFill4K-4          10000000               155 ns/op               0 B/op          0 allocs/op
Benchmark03Int32RangeClear64K-4           200000              8172 ns/op               0 B/op          0 allocs/op
Benchmark03Int32MemsetClear64K-4          200000              7340 ns/op               0 B/op          0 allocs/op
Benchmark03Int32RangeFill64K-4             50000             24802 ns/op               0 B/op          0 allocs/op
Benchmark03Int32MemsetFill64K-4           200000              7428 ns/op               0 B/op          0 allocs/op
Benchmark03Int32RangeClear1M-4              5000            353712 ns/op               0 B/op          0 allocs/op
Benchmark03Int32MemsetClear1M-4            10000            139069 ns/op               0 B/op          0 allocs/op
Benchmark03Int32RangeFill1M-4               3000            405863 ns/op               0 B/op          0 allocs/op
Benchmark03Int32MemsetFill1M-4             10000            138781 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        40.984s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03Int64RangeClear8-4           1000000000               2.79 ns/op            0 B/op          0 allocs/op
Benchmark03Int64MemsetClear8-4          100000000               11.1 ns/op             0 B/op          0 allocs/op
Benchmark03Int64RangeFill8-4            1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03Int64MemsetFill8-4           100000000               11.1 ns/op             0 B/op          0 allocs/op
Benchmark03Int64RangeClear64-4          100000000               12.3 ns/op             0 B/op          0 allocs/op
Benchmark03Int64MemsetClear64-4         50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Int64RangeFill64-4           50000000                35.0 ns/op             0 B/op          0 allocs/op
Benchmark03Int64MemsetFill64-4          50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Int64RangeClear1K-4          10000000               146 ns/op               0 B/op          0 allocs/op
Benchmark03Int64MemsetClear1K-4         20000000                84.4 ns/op             0 B/op          0 allocs/op
Benchmark03Int64RangeFill1K-4            5000000               369 ns/op               0 B/op          0 allocs/op
Benchmark03Int64MemsetFill1K-4          20000000                84.4 ns/op             0 B/op          0 allocs/op
Benchmark03Int64RangeClear4K-4           3000000               573 ns/op               0 B/op          0 allocs/op
Benchmark03Int64MemsetClear4K-4          5000000               304 ns/op               0 B/op          0 allocs/op
Benchmark03Int64RangeFill4K-4            1000000              1439 ns/op               0 B/op          0 allocs/op
Benchmark03Int64MemsetFill4K-4           5000000               309 ns/op               0 B/op          0 allocs/op
Benchmark03Int64RangeClear64K-4           100000             19416 ns/op               0 B/op          0 allocs/op
Benchmark03Int64MemsetClear64K-4          100000             14927 ns/op               0 B/op          0 allocs/op
Benchmark03Int64RangeFill64K-4             50000             25097 ns/op               0 B/op          0 allocs/op
Benchmark03Int64MemsetFill64K-4           100000             14978 ns/op               0 B/op          0 allocs/op
Benchmark03Int64RangeClear1M-4              1000           1434133 ns/op               0 B/op          0 allocs/op
Benchmark03Int64MemsetClear1M-4             3000            505905 ns/op               0 B/op          0 allocs/op
Benchmark03Int64RangeFill1M-4               1000           1444542 ns/op               0 B/op          0 allocs/op
Benchmark03Int64MemsetFill1M-4              3000            506238 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        41.859s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03UintRangeClear8-4            1000000000               2.79 ns/op            0 B/op          0 allocs/op
Benchmark03UintMemsetClear8-4           100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03UintRangeFill8-4             1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03UintMemsetFill8-4            100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03UintRangeClear64-4           100000000               12.3 ns/op             0 B/op          0 allocs/op
Benchmark03UintMemsetClear64-4          50000000                25.6 ns/op             0 B/op          0 allocs/op
Benchmark03UintRangeFill64-4            50000000                35.0 ns/op             0 B/op          0 allocs/op
Benchmark03UintMemsetFill64-4           50000000                25.6 ns/op             0 B/op          0 allocs/op
Benchmark03UintRangeClear1K-4           10000000               145 ns/op               0 B/op          0 allocs/op
Benchmark03UintMemsetClear1K-4          20000000                84.4 ns/op             0 B/op          0 allocs/op
Benchmark03UintRangeFill1K-4             5000000               369 ns/op               0 B/op          0 allocs/op
Benchmark03UintMemsetFill1K-4           20000000                84.4 ns/op             0 B/op          0 allocs/op
Benchmark03UintRangeClear4K-4            3000000               573 ns/op               0 B/op          0 allocs/op
Benchmark03UintMemsetClear4K-4           5000000               305 ns/op               0 B/op          0 allocs/op
Benchmark03UintRangeFill4K-4             1000000              1439 ns/op               0 B/op          0 allocs/op
Benchmark03UintMemsetFill4K-4            5000000               305 ns/op               0 B/op          0 allocs/op
Benchmark03UintRangeClear64K-4            100000             19164 ns/op               0 B/op          0 allocs/op
Benchmark03UintMemsetClear64K-4           100000             14939 ns/op               0 B/op          0 allocs/op
Benchmark03UintRangeFill64K-4             100000             22872 ns/op               0 B/op          0 allocs/op
Benchmark03UintMemsetFill64K-4            100000             15011 ns/op               0 B/op          0 allocs/op
Benchmark03UintRangeClear1M-4               1000           1432665 ns/op               0 B/op          0 allocs/op
Benchmark03UintMemsetClear1M-4              3000            506884 ns/op               0 B/op          0 allocs/op
Benchmark03UintRangeFill1M-4                1000           1447261 ns/op               0 B/op          0 allocs/op
Benchmark03UintMemsetFill1M-4               3000            505731 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        42.859s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03ByteRangeClear8-4            1000000000               2.79 ns/op            0 B/op          0 allocs/op
Benchmark03ByteMemsetClear8-4           100000000               12.0 ns/op             0 B/op          0 allocs/op
Benchmark03ByteRangeFill8-4             1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03ByteMemsetFill8-4            100000000               12.0 ns/op             0 B/op          0 allocs/op
Benchmark03ByteRangeClear64-4           500000000                3.06 ns/op            0 B/op          0 allocs/op
Benchmark03ByteMemsetClear64-4          100000000               12.0 ns/op             0 B/op          0 allocs/op
Benchmark03ByteRangeFill64-4            50000000                30.0 ns/op             0 B/op          0 allocs/op
Benchmark03ByteMemsetFill64-4           100000000               12.0 ns/op             0 B/op          0 allocs/op
Benchmark03ByteRangeClear1K-4           100000000               21.2 ns/op             0 B/op          0 allocs/op
Benchmark03ByteMemsetClear1K-4          100000000               17.0 ns/op             0 B/op          0 allocs/op
Benchmark03ByteRangeFill1K-4             5000000               290 ns/op               0 B/op          0 allocs/op
Benchmark03ByteMemsetFill1K-4           100000000               17.0 ns/op             0 B/op          0 allocs/op
Benchmark03ByteRangeClear4K-4           20000000                74.7 ns/op             0 B/op          0 allocs/op
Benchmark03ByteMemsetClear4K-4          30000000                43.5 ns/op             0 B/op          0 allocs/op
Benchmark03ByteRangeFill4K-4             1000000              1146 ns/op               0 B/op          0 allocs/op
Benchmark03ByteMemsetFill4K-4           30000000                45.4 ns/op             0 B/op          0 allocs/op
Benchmark03ByteRangeClear64K-4           1000000              1788 ns/op               0 B/op          0 allocs/op
Benchmark03ByteMemsetClear64K-4          1000000              1804 ns/op               0 B/op          0 allocs/op
Benchmark03ByteRangeFill64K-4             100000             19971 ns/op               0 B/op          0 allocs/op
Benchmark03ByteMemsetFill64K-4           1000000              1803 ns/op               0 B/op          0 allocs/op
Benchmark03ByteRangeClear1M-4              50000             38917 ns/op               0 B/op          0 allocs/op
Benchmark03ByteMemsetClear1M-4             50000             30740 ns/op               0 B/op          0 allocs/op
Benchmark03ByteRangeFill1M-4                5000            324010 ns/op               0 B/op          0 allocs/op
Benchmark03ByteMemsetFill1M-4              50000             30671 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        42.192s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03Uint16RangeClear8-4          1000000000               2.23 ns/op            0 B/op          0 allocs/op
Benchmark03Uint16MemsetClear8-4         100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16RangeFill8-4           1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03Uint16MemsetFill8-4          100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16RangeClear64-4         300000000                4.46 ns/op            0 B/op          0 allocs/op
Benchmark03Uint16MemsetClear64-4        50000000                25.6 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16RangeFill64-4          50000000                35.0 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16MemsetFill64-4         50000000                25.6 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16RangeClear1K-4         50000000                39.0 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16MemsetClear1K-4        50000000                34.5 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16RangeFill1K-4           5000000               370 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16MemsetFill1K-4         50000000                34.5 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16RangeClear4K-4         10000000               145 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16MemsetClear4K-4        20000000                87.0 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16RangeFill4K-4           1000000              1439 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16MemsetFill4K-4         20000000                86.9 ns/op             0 B/op          0 allocs/op
Benchmark03Uint16RangeClear64K-4          500000              3575 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16MemsetClear64K-4         500000              3618 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16RangeFill64K-4           100000             21684 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16MemsetFill64K-4          500000              3625 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16RangeClear1M-4            20000             81960 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16MemsetClear1M-4           20000             62427 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16RangeFill1M-4              5000            353222 ns/op               0 B/op          0 allocs/op
Benchmark03Uint16MemsetFill1M-4            20000             62120 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        44.125s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03Uint32RangeClear8-4          1000000000               2.80 ns/op            0 B/op          0 allocs/op
Benchmark03Uint32MemsetClear8-4         100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Uint32RangeFill8-4           1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03Uint32MemsetFill8-4          100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Uint32RangeClear64-4         200000000                7.80 ns/op            0 B/op          0 allocs/op
Benchmark03Uint32MemsetClear64-4        50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Uint32RangeFill64-4          50000000                36.7 ns/op             0 B/op          0 allocs/op
Benchmark03Uint32MemsetFill64-4         50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Uint32RangeClear1K-4         20000000                74.7 ns/op             0 B/op          0 allocs/op
Benchmark03Uint32MemsetClear1K-4        30000000                48.5 ns/op             0 B/op          0 allocs/op
Benchmark03Uint32RangeFill1K-4           5000000               390 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32MemsetFill1K-4         30000000                48.5 ns/op             0 B/op          0 allocs/op
Benchmark03Uint32RangeClear4K-4          5000000               288 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32MemsetClear4K-4        10000000               155 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32RangeFill4K-4           1000000              1530 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32MemsetFill4K-4         10000000               155 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32RangeClear64K-4          200000              8147 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32MemsetClear64K-4         200000              7323 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32RangeFill64K-4            50000             32829 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32MemsetFill64K-4          200000              7326 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32RangeClear1M-4             3000            521142 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32MemsetClear1M-4           10000            139621 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32RangeFill1M-4              3000            414809 ns/op               0 B/op          0 allocs/op
Benchmark03Uint32MemsetFill1M-4            10000            139644 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        41.128s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03Uint64RangeClear8-4          1000000000               2.79 ns/op            0 B/op          0 allocs/op
Benchmark03Uint64MemsetClear8-4         100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Uint64RangeFill8-4           1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03Uint64MemsetFill8-4          100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Uint64RangeClear64-4         100000000               12.3 ns/op             0 B/op          0 allocs/op
Benchmark03Uint64MemsetClear64-4        50000000                25.6 ns/op             0 B/op          0 allocs/op
Benchmark03Uint64RangeFill64-4          50000000                35.0 ns/op             0 B/op          0 allocs/op
Benchmark03Uint64MemsetFill64-4         50000000                25.6 ns/op             0 B/op          0 allocs/op
Benchmark03Uint64RangeClear1K-4         10000000               145 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64MemsetClear1K-4        20000000                84.4 ns/op             0 B/op          0 allocs/op
Benchmark03Uint64RangeFill1K-4           5000000               369 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64MemsetFill1K-4         20000000                84.4 ns/op             0 B/op          0 allocs/op
Benchmark03Uint64RangeClear4K-4          3000000               574 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64MemsetClear4K-4         5000000               306 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64RangeFill4K-4           1000000              1440 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64MemsetFill4K-4          5000000               300 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64RangeClear64K-4          100000             19468 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64MemsetClear64K-4         100000             14976 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64RangeFill64K-4           100000             23068 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64MemsetFill64K-4          100000             14990 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64RangeClear1M-4             1000           1431867 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64MemsetClear1M-4            3000            506043 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64RangeFill1M-4              1000           1442897 ns/op               0 B/op          0 allocs/op
Benchmark03Uint64MemsetFill1M-4             3000            506322 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        42.885s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03UintptrRangeClear8-4         1000000000               2.79 ns/op            0 B/op          0 allocs/op
Benchmark03UintptrMemsetClear8-4        100000000               11.1 ns/op             0 B/op          0 allocs/op
Benchmark03UintptrRangeFill8-4          1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03UintptrMemsetFill8-4         100000000               11.1 ns/op             0 B/op          0 allocs/op
Benchmark03UintptrRangeClear64-4        100000000               12.3 ns/op             0 B/op          0 allocs/op
Benchmark03UintptrMemsetClear64-4       50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03UintptrRangeFill64-4         50000000                35.0 ns/op             0 B/op          0 allocs/op
Benchmark03UintptrMemsetFill64-4        50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03UintptrRangeClear1K-4        10000000               145 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrMemsetClear1K-4       20000000                85.5 ns/op             0 B/op          0 allocs/op
Benchmark03UintptrRangeFill1K-4          5000000               369 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrMemsetFill1K-4        20000000                85.5 ns/op             0 B/op          0 allocs/op
Benchmark03UintptrRangeClear4K-4         3000000               575 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrMemsetClear4K-4        5000000               303 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrRangeFill4K-4          1000000              1439 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrMemsetFill4K-4         5000000               300 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrRangeClear64K-4         100000             19287 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrMemsetClear64K-4        100000             14834 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrRangeFill64K-4           50000             34299 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrMemsetFill64K-4         100000             14840 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrRangeClear1M-4            1000           1432101 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrMemsetClear1M-4           3000            505659 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrRangeFill1M-4             1000           1443320 ns/op               0 B/op          0 allocs/op
Benchmark03UintptrMemsetFill1M-4            3000            505963 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        42.375s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03Float32RangeClear8-4         1000000000               2.79 ns/op            0 B/op          0 allocs/op
Benchmark03Float32MemsetClear8-4        100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Float32RangeFill8-4          1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03Float32MemsetFill8-4         100000000               11.1 ns/op             0 B/op          0 allocs/op
Benchmark03Float32RangeClear64-4        200000000                7.80 ns/op            0 B/op          0 allocs/op
Benchmark03Float32MemsetClear64-4       50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Float32RangeFill64-4         50000000                36.8 ns/op             0 B/op          0 allocs/op
Benchmark03Float32MemsetFill64-4        50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Float32RangeClear1K-4        20000000                74.7 ns/op             0 B/op          0 allocs/op
Benchmark03Float32MemsetClear1K-4       30000000                50.1 ns/op             0 B/op          0 allocs/op
Benchmark03Float32RangeFill1K-4          3000000               439 ns/op               0 B/op          0 allocs/op
Benchmark03Float32MemsetFill1K-4        30000000                50.4 ns/op             0 B/op          0 allocs/op
Benchmark03Float32RangeClear4K-4         5000000               288 ns/op               0 B/op          0 allocs/op
Benchmark03Float32MemsetClear4K-4       10000000               155 ns/op               0 B/op          0 allocs/op
Benchmark03Float32RangeFill4K-4          1000000              1724 ns/op               0 B/op          0 allocs/op
Benchmark03Float32MemsetFill4K-4        10000000               157 ns/op               0 B/op          0 allocs/op
Benchmark03Float32RangeClear64K-4         200000              8340 ns/op               0 B/op          0 allocs/op
Benchmark03Float32MemsetClear64K-4        200000              7351 ns/op               0 B/op          0 allocs/op
Benchmark03Float32RangeFill64K-4           50000             21019 ns/op               0 B/op          0 allocs/op
Benchmark03Float32MemsetFill64K-4         200000              7333 ns/op               0 B/op          0 allocs/op
Benchmark03Float32RangeClear1M-4            3000            512779 ns/op               0 B/op          0 allocs/op
Benchmark03Float32MemsetClear1M-4          10000            138303 ns/op               0 B/op          0 allocs/op
Benchmark03Float32RangeFill1M-4             3000            400517 ns/op               0 B/op          0 allocs/op
Benchmark03Float32MemsetFill1M-4           10000            138597 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        40.255s

go version go1.10.3 linux/amd64
goos: linux
goarch: amd64
pkg: github.com/guns/golibs/optimized
Benchmark03Float64RangeClear8-4         1000000000               2.79 ns/op            0 B/op          0 allocs/op
Benchmark03Float64MemsetClear8-4        100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Float64RangeFill8-4          1000000000               2.51 ns/op            0 B/op          0 allocs/op
Benchmark03Float64MemsetFill8-4         100000000               11.4 ns/op             0 B/op          0 allocs/op
Benchmark03Float64RangeClear64-4        100000000               12.3 ns/op             0 B/op          0 allocs/op
Benchmark03Float64MemsetClear64-4       50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Float64RangeFill64-4         50000000                36.8 ns/op             0 B/op          0 allocs/op
Benchmark03Float64MemsetFill64-4        50000000                25.9 ns/op             0 B/op          0 allocs/op
Benchmark03Float64RangeClear1K-4        10000000               145 ns/op               0 B/op          0 allocs/op
Benchmark03Float64MemsetClear1K-4       20000000                85.5 ns/op             0 B/op          0 allocs/op
Benchmark03Float64RangeFill1K-4          3000000               439 ns/op               0 B/op          0 allocs/op
Benchmark03Float64MemsetFill1K-4        20000000                85.7 ns/op             0 B/op          0 allocs/op
Benchmark03Float64RangeClear4K-4         3000000               573 ns/op               0 B/op          0 allocs/op
Benchmark03Float64MemsetClear4K-4        5000000               301 ns/op               0 B/op          0 allocs/op
Benchmark03Float64RangeFill4K-4          1000000              1726 ns/op               0 B/op          0 allocs/op
Benchmark03Float64MemsetFill4K-4         5000000               301 ns/op               0 B/op          0 allocs/op
Benchmark03Float64RangeClear64K-4         100000             19466 ns/op               0 B/op          0 allocs/op
Benchmark03Float64MemsetClear64K-4        100000             14841 ns/op               0 B/op          0 allocs/op
Benchmark03Float64RangeFill64K-4           50000             24928 ns/op               0 B/op          0 allocs/op
Benchmark03Float64MemsetFill64K-4         100000             14816 ns/op               0 B/op          0 allocs/op
Benchmark03Float64RangeClear1M-4            1000           1434040 ns/op               0 B/op          0 allocs/op
Benchmark03Float64MemsetClear1M-4           3000            505823 ns/op               0 B/op          0 allocs/op
Benchmark03Float64RangeFill1M-4             1000           1452062 ns/op               0 B/op          0 allocs/op
Benchmark03Float64MemsetFill1M-4            3000            506004 ns/op               0 B/op          0 allocs/op
PASS
ok      github.com/guns/golibs/optimized        41.802s

