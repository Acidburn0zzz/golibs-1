// This file was generated by gen_memset.rb and should not be edited by hand.

// Copyright (c) 2018 Sung Pae <self@sungpae.com>
// Distributed under the MIT license.
// http://www.opensource.org/licenses/mit-license.php

// +build !amd64

#include "textflag.h"

// func MemsetIntSlice(s []int, n int)
TEXT ·MemsetIntSlice(SB), NOSPLIT, $0
	JMP ·memsetIntSlice(SB)

// func MemsetInt8Slice(s []int8, n int8)
TEXT ·MemsetInt8Slice(SB), NOSPLIT, $0
	JMP ·memsetInt8Slice(SB)

// func MemsetInt16Slice(s []int16, n int16)
TEXT ·MemsetInt16Slice(SB), NOSPLIT, $0
	JMP ·memsetInt16Slice(SB)

// func MemsetInt32Slice(s []int32, n int32)
TEXT ·MemsetInt32Slice(SB), NOSPLIT, $0
	JMP ·memsetInt32Slice(SB)

// func MemsetInt64Slice(s []int64, n int64)
TEXT ·MemsetInt64Slice(SB), NOSPLIT, $0
	JMP ·memsetInt64Slice(SB)

// func MemsetUintSlice(s []uint, n uint)
TEXT ·MemsetUintSlice(SB), NOSPLIT, $0
	JMP ·memsetUintSlice(SB)

// func MemsetByteSlice(s []byte, n byte)
TEXT ·MemsetByteSlice(SB), NOSPLIT, $0
	JMP ·memsetByteSlice(SB)

// func MemsetUint16Slice(s []uint16, n uint16)
TEXT ·MemsetUint16Slice(SB), NOSPLIT, $0
	JMP ·memsetUint16Slice(SB)

// func MemsetUint32Slice(s []uint32, n uint32)
TEXT ·MemsetUint32Slice(SB), NOSPLIT, $0
	JMP ·memsetUint32Slice(SB)

// func MemsetUint64Slice(s []uint64, n uint64)
TEXT ·MemsetUint64Slice(SB), NOSPLIT, $0
	JMP ·memsetUint64Slice(SB)

// func MemsetUintptrSlice(s []uintptr, n uintptr)
TEXT ·MemsetUintptrSlice(SB), NOSPLIT, $0
	JMP ·memsetUintptrSlice(SB)

// func MemsetFloat32Slice(s []float32, n float32)
TEXT ·MemsetFloat32Slice(SB), NOSPLIT, $0
	JMP ·memsetFloat32Slice(SB)

// func MemsetFloat64Slice(s []float64, n float64)
TEXT ·MemsetFloat64Slice(SB), NOSPLIT, $0
	JMP ·memsetFloat64Slice(SB)
