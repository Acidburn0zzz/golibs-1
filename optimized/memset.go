// This file was generated by gen_memset.rb and should not be edited by hand.

// Copyright (c) 2018 Sung Pae <self@sungpae.com>
// Distributed under the MIT license.
// http://www.opensource.org/licenses/mit-license.php

package optimized

// MemsetIntSlice fills a []int with value n.
func MemsetIntSlice(s []int, n int)
func memsetIntSlice(s []int, n int) {
	for i := range s {
		s[i] = n
	}
}

// MemsetInt8Slice fills a []int8 with value n.
func MemsetInt8Slice(s []int8, n int8)
func memsetInt8Slice(s []int8, n int8) {
	for i := range s {
		s[i] = n
	}
}

// MemsetInt16Slice fills a []int16 with value n.
func MemsetInt16Slice(s []int16, n int16)
func memsetInt16Slice(s []int16, n int16) {
	for i := range s {
		s[i] = n
	}
}

// MemsetInt32Slice fills a []int32 with value n.
func MemsetInt32Slice(s []int32, n int32)
func memsetInt32Slice(s []int32, n int32) {
	for i := range s {
		s[i] = n
	}
}

// MemsetInt64Slice fills a []int64 with value n.
func MemsetInt64Slice(s []int64, n int64)
func memsetInt64Slice(s []int64, n int64) {
	for i := range s {
		s[i] = n
	}
}

// MemsetUintSlice fills a []uint with value n.
func MemsetUintSlice(s []uint, n uint)
func memsetUintSlice(s []uint, n uint) {
	for i := range s {
		s[i] = n
	}
}

// MemsetByteSlice fills a []byte with value n.
func MemsetByteSlice(s []byte, n byte)
func memsetByteSlice(s []byte, n byte) {
	for i := range s {
		s[i] = n
	}
}

// MemsetUint16Slice fills a []uint16 with value n.
func MemsetUint16Slice(s []uint16, n uint16)
func memsetUint16Slice(s []uint16, n uint16) {
	for i := range s {
		s[i] = n
	}
}

// MemsetUint32Slice fills a []uint32 with value n.
func MemsetUint32Slice(s []uint32, n uint32)
func memsetUint32Slice(s []uint32, n uint32) {
	for i := range s {
		s[i] = n
	}
}

// MemsetUint64Slice fills a []uint64 with value n.
func MemsetUint64Slice(s []uint64, n uint64)
func memsetUint64Slice(s []uint64, n uint64) {
	for i := range s {
		s[i] = n
	}
}

// MemsetUintptrSlice fills a []uintptr with value n.
func MemsetUintptrSlice(s []uintptr, n uintptr)
func memsetUintptrSlice(s []uintptr, n uintptr) {
	for i := range s {
		s[i] = n
	}
}

// MemsetFloat32Slice fills a []float32 with value n.
func MemsetFloat32Slice(s []float32, n float32)
func memsetFloat32Slice(s []float32, n float32) {
	for i := range s {
		s[i] = n
	}
}

// MemsetFloat64Slice fills a []float64 with value n.
func MemsetFloat64Slice(s []float64, n float64)
func memsetFloat64Slice(s []float64, n float64) {
	for i := range s {
		s[i] = n
	}
}
